CREATE TABLE IF NOT EXISTS run (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME,
  scraperId INTEGER NOT NULL,
  status TEXT NOT NULL DEFAULT 'running',
  FOREIGN KEY(scraperId) REFERENCES scraper(id)
);
CREATE TABLE IF NOT EXISTS scraper (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME,
  knownId TEXT NOT NULL UNIQUE,
  name TEXT NOT NULL,
  associatedWidgets TEXT NOT NULL,
  status TEXT NOT NULL DEFAULT 'inactive',
  interval INTEGER NOT NULL DEFAULT 86400,
  url TEXT NOT NULL,
  description TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS json (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME,
  scraperId INTEGER NOT NULL,
  runId INTEGER NOT NULL,
  json TEXT,
  cacheHash TEXT,
  status TEXT NOT NULL DEFAULT 'latest',
  FOREIGN KEY(scraperId) REFERENCES scraper(id),
  FOREIGN KEY(runId) REFERENCES run(id)
);
CREATE TABLE IF NOT EXISTS user (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME,
  email TEXT NOT NULL UNIQUE,
  cuid TEXT NOT NULL UNIQUE,
  role TEXT NOT NULL DEFAULT 'scout',
  whitelist INTEGER NOT NULL DEFAULT 0
);
CREATE TABLE IF NOT EXISTS screenshot (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME,
  scraperId INTEGER NOT NULL,
  runId INTEGER NOT NULL,
  image TEXT,
  FOREIGN KEY(scraperId) REFERENCES scraper(id),
  FOREIGN KEY(runId) REFERENCES run(id)
);
CREATE TABLE IF NOT EXISTS access_request (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME,
  email TEXT NOT NULL UNIQUE,
  whitelisted INTEGER NOT NULL DEFAULT 0
);
CREATE TABLE IF NOT EXISTS challenge (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME,
  userId INTEGER NOT NULL,
  challenge TEXT NOT NULL UNIQUE,
  expiresAt DATETIME NOT NULL,
  FOREIGN KEY(userId) REFERENCES user(id)
);
PRAGMA user_version = 1;